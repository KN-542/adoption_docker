version: "3.9"
services:
  frontend:
    build:
      context: ../adoption_nextjs
      dockerfile: Dockerfile
    container_name: frontend
    working_dir: /app
    hostname: frontend
    volumes:
      - ../adoption_nextjs:/app:cached
      - next_node_modules:/app/node_modules # node_modules をコンテナ内でキャッシュ
    tty: true
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_CSR_URL: http://localhost:8080
      NEXT_SSG_URL: http://backend:8080
    networks:
      - network1

  frontend_applicant:
    build:
      context: ../applicant_nextjs
      dockerfile: Dockerfile
    container_name: frontend_applicant
    working_dir: /app
    hostname: frontend_applicant
    volumes:
      - ../applicant_nextjs:/app:cached
      - next2_node_modules:/app/node_modules # node_modules をコンテナ内でキャッシュ
    tty: true
    ports:
      - "3001:3000"
    environment:
      NEXT_PUBLIC_CSR_URL: http://localhost:8080
      NEXT_SSG_URL: http://backend:8080
    networks:
      - network1

  backend:
    build:
      context: ../adoption_go
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      - postgres # バックエンドのコンテナがpostgresに依存
    working_dir: /app
    hostname: backend
    volumes:
      - ../adoption_go:/app:cached
      # ここにGoの依存関係のディレクトリがあれば、同様にキャッシュを考慮して追加
    tty: true
    ports:
      - "8080:8080"
    environment: # AWS Secrets Managerに格納すること！
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres
      GO_ENV: dev
      API_DOMAIN: backend
      JWT_SECRET: L67HRe77jlmoAoaV1
      JWT_SECRET2: L67HRe77jlmoAoaV2
      JWT_SECRET3: L67HRe77jlmoAoaV3
      BATCH_URL: http://batch:8081
      FE_CSR_URL: http://localhost:3000
      FE_SSG_URL: http://frontend:3000
      FE_APPLICANT_CSR_URL: http://localhost:3001
      FE_APPLICANT_SSG_URL: http://frontend_applicant:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      AWS_REGION: ap-northeast-1
      AWS_ACCESS_KEY: <REDACTED>
      AWS_SECRET_KEY: <REDACTED>/
      AWS_S3_BUCKET_NAME: adoption-resume
    networks:
      - network1

  batch:
    build:
      context: ../adoption_batch
      dockerfile: Dockerfile
    container_name: batch
    working_dir: /app
    hostname: batch
    volumes:
      - ../adoption_batch:/app:cached
    tty: true
    ports:
      - "8081:8081"
    environment:
      GO_ENV: dev
      BATCH_DOMAIN: batch
      API_URL: http://backend:8080
    networks:
      - network1

  postgres:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: postgres
    hostname: postgres
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./db/data:/var/lib/postgresql/data
    networks:
      - network1

  redis:
    image: redis:7.2.1-alpine
    container_name: redis
    hostname: redis
    ports:
      - 6380:6379
    networks:
      - network1

  redisinsight:
    image: redislabs/redisinsight
    container_name: redisinsight
    ports:
      - 8001:8001
    networks:
      - network1

networks:
  network1:
    driver: bridge

volumes:
  next_node_modules:
  next2_node_modules:
